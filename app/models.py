from sqlalchemy import Column, Integer, String, Float, DateTime, Boolean, ForeignKey, JSON
from sqlalchemy.orm import relationship
from datetime import datetime
from app.database import Base

# ====== –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ======
class User(Base):
    __tablename__ = "users"

    id = Column(Integer, primary_key=True, index=True)
    username = Column(String, unique=True, index=True)
    email = Column(String, unique=True, index=True)
    hashed_password = Column(String)

    financial_records = relationship("FinancialRecord", back_populates="user", cascade="all, delete")

# ====== –ú–æ–¥–µ–ª—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö ======
class FinancialRecord(Base):
    __tablename__ = "financial_records"

    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"), nullable=False)
    type = Column(String, nullable=False)  # loan / deposit / credit_card
    bank_name = Column(String, nullable=False)
    amount = Column(Float, nullable=False)
    interest_rate = Column(Float, nullable=False)
    start_date = Column(DateTime, default=datetime.utcnow)
    end_date = Column(DateTime, nullable=True)  # –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –¥–ª—è –±–µ—Å—Å—Ä–æ—á–Ω–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞
    is_open_ended = Column(Boolean, default=False)  # –ë–µ—Å—Å—Ä–æ—á–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç

    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ —Å—É–º–º–∞–º
    min_amount = Column(Float, nullable=True)  
    max_amount = Column(Float, nullable=True)  

    # –î–µ–ø–æ–∑–∏—Ç—ã: —Ä–∞–∑–Ω—ã–µ –º–æ–¥–µ–ª–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
    interest_accrual_type = Column(String, nullable=True)  # monthly_fixed_date / daily / floating
    future_date = Column(DateTime, nullable=True)  # –î–∞—Ç–∞ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –±—É–¥—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞

    # –ö—Ä–µ–¥–∏—Ç—ã: –≥—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π, —à—Ç—Ä–∞—Ñ—ã
    payment_type = Column(String, nullable=True)  # annuity / differentiated
    payment_day = Column(Integer, nullable=True)  # –î–µ–Ω—å –º–µ—Å—è—Ü–∞ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–µ–π
    early_repayment_fee = Column(Boolean, default=False)  # –®—Ç—Ä–∞—Ñ –∑–∞ –¥–æ—Å—Ä–æ—á–Ω–æ–µ –ø–æ–≥–∞—à–µ–Ω–∏–µ
    refinance_available = Column(Boolean, default=False)  # –î–æ—Å—Ç—É–ø–Ω–æ –ª–∏ —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ

    # –ö—Ä–µ–¥–∏—Ç–Ω—ã–µ –∫–∞—Ä—Ç—ã
    credit_limit = Column(Float, nullable=True)  
    available_balance = Column(Float, nullable=True)
    grace_period_end_date = Column(DateTime, nullable=True)
    purchase_interest_rate = Column(Float, nullable=True)
    cash_withdrawal_rate = Column(Float, nullable=True)
    refinance_rate = Column(Float, nullable=True)

    # –ù–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    monthly_fee = Column(Float, nullable=True)  # –ï–∂–µ–º–µ—Å—è—á–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è
    cashback_percent = Column(Float, nullable=True)  # –ü—Ä–æ—Ü–µ–Ω—Ç –∫—ç—à–±—ç–∫–∞
    overdraft_available = Column(Boolean, default=False)  # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–≤–µ—Ä–¥—Ä–∞—Ñ—Ç–∞
    overdraft_limit = Column(Float, nullable=True)  # –õ–∏–º–∏—Ç –æ–≤–µ—Ä–¥—Ä–∞—Ñ—Ç–∞

    # –ù–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    liquidity_check = Column(Boolean, default=True)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏
    last_interest_change_date = Column(DateTime, nullable=True)  # –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏
    penalty_fee = Column(Float, nullable=True)  # –®—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–ª–∞—Ç–µ–∂–∞
    flexible_interest = Column(Boolean, default=False)  # –ï—Å—Ç—å –ª–∏ –≥–∏–±–∫–∞—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞

    # üî• **–ù–û–í–´–ï –ü–ê–†–ê–ú–ï–¢–†–´** üî•
    fee = Column(Float, nullable=True)  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è
    penalty = Column(Float, nullable=True)  # –®—Ç—Ä–∞—Ñ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π
    interest_rate_changes = Column(JSON, nullable=True)  # –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫

    user = relationship("User", back_populates="financial_records")
