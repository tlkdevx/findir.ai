"""Update financial model

Revision ID: bec83eac3181
Revises: 5b4d223f2cfa
Create Date: 2025-02-05 11:29:03.617822

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bec83eac3181'
down_revision: Union[str, None] = '5b4d223f2cfa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('financial_records', sa.Column('is_open_ended', sa.Boolean(), nullable=True))
    op.add_column('financial_records', sa.Column('interest_accrual_type', sa.String(), nullable=True))
    op.add_column('financial_records', sa.Column('future_date', sa.DateTime(), nullable=True))
    op.add_column('financial_records', sa.Column('payment_type', sa.String(), nullable=True))
    op.add_column('financial_records', sa.Column('payment_day', sa.Integer(), nullable=True))
    op.add_column('financial_records', sa.Column('early_repayment_fee', sa.Boolean(), nullable=True))
    op.add_column('financial_records', sa.Column('credit_limit', sa.Float(), nullable=True))
    op.add_column('financial_records', sa.Column('available_balance', sa.Float(), nullable=True))
    op.add_column('financial_records', sa.Column('grace_period_end_date', sa.DateTime(), nullable=True))
    op.add_column('financial_records', sa.Column('purchase_interest_rate', sa.Float(), nullable=True))
    op.add_column('financial_records', sa.Column('cash_withdrawal_rate', sa.Float(), nullable=True))
    op.add_column('financial_records', sa.Column('refinance_rate', sa.Float(), nullable=True))
    op.add_column('financial_records', sa.Column('monthly_fee', sa.Float(), nullable=True))
    op.add_column('financial_records', sa.Column('cashback_percent', sa.Float(), nullable=True))
    op.add_column('financial_records', sa.Column('overdraft_available', sa.Boolean(), nullable=True))
    op.add_column('financial_records', sa.Column('overdraft_limit', sa.Float(), nullable=True))
    op.alter_column('financial_records', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('financial_records', 'withdrawal_penalty')
    op.drop_column('financial_records', 'alternative_deposits')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('financial_records', sa.Column('alternative_deposits', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('financial_records', sa.Column('withdrawal_penalty', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.alter_column('financial_records', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('financial_records', 'overdraft_limit')
    op.drop_column('financial_records', 'overdraft_available')
    op.drop_column('financial_records', 'cashback_percent')
    op.drop_column('financial_records', 'monthly_fee')
    op.drop_column('financial_records', 'refinance_rate')
    op.drop_column('financial_records', 'cash_withdrawal_rate')
    op.drop_column('financial_records', 'purchase_interest_rate')
    op.drop_column('financial_records', 'grace_period_end_date')
    op.drop_column('financial_records', 'available_balance')
    op.drop_column('financial_records', 'credit_limit')
    op.drop_column('financial_records', 'early_repayment_fee')
    op.drop_column('financial_records', 'payment_day')
    op.drop_column('financial_records', 'payment_type')
    op.drop_column('financial_records', 'future_date')
    op.drop_column('financial_records', 'interest_accrual_type')
    op.drop_column('financial_records', 'is_open_ended')
    # ### end Alembic commands ###
